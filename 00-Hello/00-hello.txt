# Syntax & Code Structure in C

# [hello.c]
include <stdio.h>
int main(){
	printf("Hello World!");
	return 0;
}

# [code structure]
1. #include <stdio.h>
2. int main()
3. printf();
4. return 0;

# [contraction]
* stmt = statement
* expr = expression

## [header file] #include <stdio.h>
`#include` berfungsi untuk mengimpor fungsi-fungsi yang sudah didefinisikan pada [header file]. [header file] adalah file yang berisi definisi fungsi yang sudah dibuat, tujuan [header file] agar dapat digunakan pada program C yang lainnya dan file ini berekstensi `.h` file `stdio.h` berisi deklarasi fungsi dasar yang dibutuhkan untuk standar input output pada C seperti `printf()`.

## [function] main() & int main() & void main()
* `main()` atau main function adalah fungsi utama dalam program, fungsi ini akan dieksekusi pertama kali saat program dijalankan. 
* `int` di depan main adalah tipe data yang akan dikembalikan. didalam fungsi `main()` wajib kita sertakan `return 0`. artinya fungsi main akan mengembalikan nilai `0` setelah selesai dieksekusi. 
* `void()` artinya tidak ada (kosong). Jika kita menggunakan `void`, maka kita tidak perlu menuliskan keyword `return` di akhir fungsi. Karena fungsi `void` tidak akan mengembalikan nilai apapun.

Syntax:
	int main(){
		statement;
		return 0;
	}

	void main(){
		statement;
	}

## [statement] printf();
Setiap statement didalam program C wajib diakhiri dengan titik koma (;) kalau tidak maka program akan error.

Syntax:
	printf("Hello World!");

Artinya: kita menyuruh komputer untuk mencetak teks Hello World! ke console.

## [return-value] return 0;
`return 0` artinya fungsi main akan mengembalikan nilai `0` setelah selesai dieksekusi.

## Block Code
Block Code adalah kumpulan `statement` dan `expression`. Block Code pada prgram C dibungkus dengan kurung kurawal { ... }.

Syntax:
	if (expr){
		stmt;
	}

	if (expr){

	} else {

	}

	if (){

	} else if (expr){

	} else {

	}

	for (init; expr; post;){
		stmt;
	}